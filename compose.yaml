services: # docker compose expects 
  #docker compose run backend /bin/bash
  backend: # custom key name
    ports:
      - 8080:8000
    #image: python:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000 # bind host to port (without host wont run)
    environment:
      - PORT=8000
      - PROJECT_NAME=My Project
    env_file:
      - .env.sample
    volumes:
      - ./backend/src:/app
    depends_on:
      db_service:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: backend/requirements.txt
        - action: rebuild
          path: backend/Dockerfile
        - action: restart
          path: backend/src/
          #target: /app
        - action: restart
          path: backend/src/
  # DATABASE_URL=postgresql+psycopg://username:password@dbhost:dbport/dbname
  # DATABASE_URL=postgresql+psycopg://dbuser:db-password@db_service:5432/mydb
  db_service:
    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - .env.sample-db
    volumes: # attach volume to host
      - dc_managed_db_volume:/var/lib/postresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  # static_html: # custom key name
  #   ports:
  #     - 8000:8000
  #     - 3000:8000
  #   #image: python:latest
  #   build:
  #     context: ./static_html
  #     dockerfile: Dockerfile.static
  #   command: python -m http.server 8000
  #   volumes:
  #     - ./static_html/src:/app

volumes:
  dc_managed_db_volume: